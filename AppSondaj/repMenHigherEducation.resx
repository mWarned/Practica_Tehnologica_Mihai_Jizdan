<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSearch.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAOsAAADrASts18IAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAADs0lEQVRYR73WT0yTdxzH8bpEd9iSxQMsO5GYnbaDJjPZPGzZdTEmHo0xHpYl281EjzMGnAwmMLCR
        SrGzCj4FSoAiWGtLO2z5O7pubYGSkOC/CQu4HpXS5/v77PuwL0sFtE+r9H38/p62r/ZJf7/H8rJaJvBR
        axjnHPfUiDOknrQHVMblU0tur5rqGaCfbt3CZ3Lpm60+hgrrJLlsY4rsEQUGgAFgABiALq9Cz4CCx6Mw
        2KP8vl7sl5e+fnV/4MvGKFaskwoMAAMUA6LXQmRvH6JazUeXGRBhgG4ABnoU7nTTc3+XfkLeovhq+MP5
        22cYAAYo2xjdsEWwT5ZfqLcX5X191MCADAPg7yQEXfo3slx4F2ZRURvHCgPQFMXzSxM4JkuvbLAbnzNg
        eR2gUWb4Bg7JUmFVT6ODAWCA+jmK4zI21V03PmHAMwZguI3+RCXekiVznZ/BxwwgAbTJuKACnfS9AbjX
        Rgg79aMyNldVCpUMAANU49T29zxfd9vwDgPSBmDESZ0yNtf5FMYEEJVRUQVvkmsdcJ1WZGQuBiytAxJo
        kVFRDd2kMwJAxIa9Ms4fA9YMQE0cP8qoqEKafnIDMOpAhYzzx4BluQU2GRXVkEanNgDhayiTcf5+SOF3
        +QXCMiqqkEYOAaQB7JJx/qpmcVF+gWxdHOUyLqioHbv5F1j8D6C8MjYX34JDAkBdDA0yLih/F323sQ+M
        OPWCNrL1qmfgNwC8Ea01xfCFjE3lc+ND3gnTAnjoteJtWTJf7TT2M+CZcRbwYbR8edLcnt7PH85nwZyc
        BQi364dlqfB4HzhunAVyGq7aRnG2+Ve8K8svZI9it8eDb/k0/Of/01Cj7GsBjBpi+JoBmZzngbRjmDqc
        IZxuD+Ck5sOprjt0lZ8HFnOeBwxAVm7B6uh11TfmUJ6Jq3hf3raw+Dj+lAG/CeCVT0QMeODt1r8KdOiH
        GbAqf0OM/0KIttJMsliE8T9uHscRe4Q0BixtAjxlwO3+fhxzu7FHXmIJaqovFzDVSoi10HSyqUhEbvYA
        3tOCqNAGX77HB12qfwvgCiHe/IYQ+Qq7UcaAxDYAzFhpbrYRH8ilO5dxBjAgsRkwbSXMNZYQwYDENgDM
        12dTD0qFYEBiK0DHwkVGVJcAEWMEAxJbAToe15QKYUUZAxKbAY9qdDy5kE2tlAIRv4LypJWSWwE6/q7S
        x+Wync1AMCC5DWBBLtn55vl2zNdTIgeQXqxcOyjLpclA3K/TRx/V6gt/Va8dsFgsln8BU9HLln1PuBcA
        AAAASUVORK5CYII=
</value>
  </data>
</root>